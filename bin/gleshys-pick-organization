#!/bin/bash
# This file is distributed as part of the GleShYS project and licensed
# using the MIT License as apporved by OSI. Check project root for
# license text and README file with further information.
#
# Copyright Â© 2020 Martin Bagge <brother@bsnet.se>.

if [[ -f $1 ]]; then
	file=$1
elif [[ $1 ]]; then
	echo "Provided settings file must be regular and readable. Aborting."
	exit 1
fi
settings=$(gleshys-discover-settings "$file")

username=$(cfg-get "$settings" "username")
apikey=$(cfg-get "$settings" "apikey")
currentOrganization=$(cfg-get "$settings" "organization")

data=$(curl-json "{}" user/listorganizations "$username:$apikey" | jq '.response.organizations[] | select(.state == "active") | {id: .id, name: .name, verification: .verification, type: .type, state: .state, flags: .featureflags}')

declare -A out
while read -r line; do
	organizationNumber=${line%%,*}
	organizationName=${line#*,}
	out[$organizationNumber]=${organizationName:1:-1}
done < <(echo "$data" | jq -r '[.id,.name] | @csv')

if (( ${#out[@]} == 1 )); then
	cfg-set "$settings" "organization" "${!out[@]}"
	cfg-set "$settings" "organizationname" "${out[@]}"
	echo "Only one organization available (${!out[*]} - ${out[*]}). Selected."
	exit
fi

echo
echo "Pick organization"
while :; do
	count=1
	for key in "${!out[@]}"; do
		# TODO check number of organizations available and decide on digit
		# width based on that. 2 will suffice for most, it will prepend a
		# space that looks good to anyone with less than 10 and look good
		# until 100.
		organizationNumber=$key
		organizationName=${out[$organizationNumber]}
		numbers[$count]=$organizationNumber
		names[$count]=$organizationName
		if [[ $currentOrganization ]] && (( currentOrganization == organizationNumber )); then
			printf "*%2d) %s (%s)\n" "$count" "$organizationName" "$organizationNumber"
		else
			printf " %2d) %s (%s)\n" "$count" "$organizationName" "$organizationNumber"
		fi
		((count++))
	done
	echo
	echo "  Q) Quit"
	echo
	read -erp " > " reply

	if [[ $reply =~ ^[0-9]+$ ]] && (( reply > 0 )) && (( reply < count )); then
		cfg-set "$settings" "organization" "${numbers[$reply]}"
		cfg-set "$settings" "organizationname" "${names[$reply]}"
		cfg-set "$settings" "project" ""
		cfg-set "$settings" "projectname" ""
		break
	else
		case $reply in
			q|Q)
				exit
				;;
			*)
				echo "Invalid choice"
				;;
		esac
	fi
done
